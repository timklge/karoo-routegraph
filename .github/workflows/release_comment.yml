name: Comment on Fixed Issues/PRs on Release

on:
  release:
    types: [published]

jobs:
  comment-on-fixed:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches
      - name: Find closed issues/PRs and comment
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the latest release tag
          RELEASE_TAG="${{ github.event.release.tag_name }}"
          
          # Get the previous tag. If there is no previous tag, this will be empty.
          PREVIOUS_TAG=$(git tag --sort=-v:refname | grep -v "$RELEASE_TAG" | head -n 1)
          
          # Get the commit range
          if [ -z "$PREVIOUS_TAG" ]; then
            # If there is no previous tag, get all commits up to the current tag
            COMMIT_RANGE="${RELEASE_TAG}"
          else
            COMMIT_RANGE="${PREVIOUS_TAG}..${RELEASE_TAG}"
          fi
          
          # Find the commits in this release
          COMMITS=$(git log "$COMMIT_RANGE" --pretty=format:"%s")
          
          # Extract issues/PRs closed (simple regex, can be improved)
          echo "$COMMITS" | grep -oE "#[0-9]+" | sort -u | while read ISSUE; do
            ISSUE_NUMBER="${ISSUE//#/}"
            COMMENT="This issue/pr has been fixed in release ${RELEASE_TAG} :tada:"
            gh issue comment "$ISSUE_NUMBER" --body "$COMMENT"
          done
        shell: bash